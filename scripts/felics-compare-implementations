#!/usr/bin/env python3
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2019 Airbus Cybersecurity SAS

from argparse import ArgumentParser
from collections import defaultdict
import json

from felics.analysis import comparison


def _load_file(filename, options):
    with open(filename) as f:
        results = json.load(f)

    grouped = defaultdict(defaultdict)

    for setup in results['data']:
        if options is not None and setup['compiler_options'] != options:
            continue

        key = comparison.setup_key(setup, ('architecture', 'cipher_name'))
        grouped[key][setup['version']] = setup

    return grouped


def _format_differences(setups, v1, v2):
    pairs = (
        (setups[s][v1], setups[s][v2])
        for s in sorted(setups)
        if v1 in setups[s] and v2 in setups[s]
    )

    return comparison.format_differences(pairs, '{cipher_name}')


def _parse_arguments():
    parser = ArgumentParser()
    parser.add_argument('results')
    parser.add_argument('version1')
    parser.add_argument('version2')
    parser.add_argument('-o', '--options', required=False)

    return parser.parse_args()


def _main():
    arguments = _parse_arguments()
    setups = _load_file(arguments.results, arguments.options)
    print('{v2} / {v1}'.format(v2=arguments.version2, v1=arguments.version1))
    print(_format_differences(setups, arguments.version1, arguments.version2))


if __name__ == '__main__':
    _main()
