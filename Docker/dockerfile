FROM ubuntu:18.04

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /opt

# Step 1: Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc-avr \
    avr-libc \
    gdb-avr \
    default-jdk \
    default-jre \
    libusb-dev \
    binutils-arm-none-eabi \
    bossa-cli \
    gcc-arm-none-eabi \
    gdb-multiarch \
    python3 \
    python3-pip \
    python3-serial \
    build-essential \
    git \
    wget \
    unzip \
    sudo \
    curl \
    udev

# Step 2: Add user and dialout group
RUN useradd -m -s /bin/bash -G dialout felics && \
    echo "felics ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

USER felics
WORKDIR /home/felics

# Step 3: Clone the FELICS-AE repository
RUN git clone https://gitlab.inria.fr/minier/felics-ae.git

# Step 4: Build and install simavr
RUN apt-get update && apt-get install -y \
    gcc-avr \
    avr-libc \
    libelf-dev \
    libreadline-dev \
    libtool \
    autoconf \
    automake \
    pkg-config \
    bison \
    flex
RUN git clone https://github.com/buserror/simavr.git && \
    cd simavr && make -j$(nproc) || true

# Step 5: Build and install mspdebug
RUN git clone https://github.com/dlbeer/mspdebug.git && \
    cd mspdebug && make -j$(nproc)

# Step 6: Download J-Link (manually required unless headless link found)
# You must manually download and mount/install the .deb or .tgz from:
# https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack

# Step 7: (Optional) Add Nordic SDK & build libnrf52840.a later manually
# Step 8: Create a placeholder for config.sh from template
RUN cp /home/felics/felics-ae/scripts/plumbing/config.sh.template \
        /home/felics/felics-ae/scripts/plumbing/config.sh

# Step 9: Ensure permissions
RUN sudo chown -R felics:dialout /home/felics

# Step 10: Add to PATH (you can update this manually later)
ENV PATH="/home/felics/simavr/simavr:${PATH}"

CMD ["/bin/bash"]
