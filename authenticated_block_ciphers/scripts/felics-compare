#!/usr/bin/env python3

from argparse import ArgumentParser
from collections import namedtuple
import json

import git
from git.exc import InvalidGitRepositoryError


Results = namedtuple('Results', ('commit', 'branch', 'data'))


ARCHITECTURES = {'AVR': 8, 'MSP': 16, 'ARM': 32, 'PC': 64}

METRICS = ('code_size', 'code_ram', 'code_time')


def _parse_architectures(argument):
    archs = set(argument.split(','))

    unknown = archs-ARCHITECTURES

    if unknown:
        raise ValueError('Unknown platforms: {u}'.format(', '.join(unknown)))

    return archs


def _parse_arguments():
    parser = ArgumentParser()
    parser.add_argument('file1')
    parser.add_argument('file2')
    parser.add_argument(
        '--threshold', default=0.01, type=float,
        help='hide difference when abs(old-new)/old < THRESHOLD'
    )
    parser.add_argument(
        '--archs', default=set(ARCHITECTURES), type=_parse_architectures,
        help='only consider those architectures'
    )
    return parser.parse_args()


def _make_key(data):
    return (
        data['cipher_name'],
        ARCHITECTURES[data['architecture']],
        data['block_size'],
        data['key_size'],
        data['version'],
        data['language'],
        data['compiler_options']
    )

    return tuple(data[k] for k in keys)


def _load_file(name, architectures):
    with open(name) as f:
        results = json.load(f)

    data = {
        _make_key(item): item
        for item in results['data']
        if item['architecture'] in architectures
    }

    return Results(results['commit'], results['branch'], data)


def _format_diff(diff, value1, value2):
    red = '\N{ESCAPE}[01;31m'
    green = '\N{ESCAPE}[01;32m'
    reset = '\N{ESCAPE}[0m'

    template = '{color}{diff:+.2%}{reset} ({v1} {arrow} {v2})'
    arguments = {'diff': diff, 'v1': value1, 'v2': value2, 'reset': reset}

    if diff < 0:
        arguments['color'] = green
        arguments['arrow'] = '↘'
    else:
        arguments['color'] = red
        arguments['arrow'] = '↗'

    return template.format_map(arguments)


def _show_differences(differences, data1, data2):
    for metric in METRICS:      # Show them in the "canonical" order.
        if metric not in differences:
            continue

        diff = _format_diff(differences[metric], data1[metric], data2[metric])

        print('\t{metric}: {diff}'.format(metric=metric, diff=diff))


def _compute_differences(threshold, data1, data2):
    differences = ((m, (data2[m] - data1[m]) / data1[m]) for m in METRICS)

    return {
        m: relative_diff
        for m, relative_diff in differences
        if abs(relative_diff) > threshold
    }


def _format_revision(setup):
    try:
        repo = git.Repo(search_parent_directories=True)
    except InvalidGitRepositoryError:
        return setup.branch

    description = repo.git.show(setup.commit, oneline=True, no_patch=True)
    return '[{branch}] {desc}'.format(branch=setup.branch, desc=description)


def _print_header(old, new, threshold):
    header = '''Comparing
\t{old}
against
\t{new}

(tolerance: {t:.2%})
'''.format(old=_format_revision(old), new=_format_revision(new), t=threshold)

    print(header)


arguments = _parse_arguments()
file1 = _load_file(arguments.file1, arguments.archs)
file2 = _load_file(arguments.file2, arguments.archs)

_print_header(file1, file2, arguments.threshold)

SETUP_TEMPLATE = ('{cipher_name}-{block_size}-{key_size} on {architecture} '
                  '(v{version} in {language} with {compiler_options})')

skipped = []

for setup, data1 in sorted(file1.data.items()):

    formatted_setup = SETUP_TEMPLATE.format_map(data1)

    if setup not in file2.data:
        skipped.append(formatted_setup)
        continue

    data2 = file2.data[setup]

    differences = _compute_differences(arguments.threshold, data1, data2)

    if not differences:
        continue

    print(formatted_setup)

    _show_differences(differences, data1, data2)

    print()

if skipped:
    print('Setups not found in {f2}:'.format(f2=arguments.file2))
    print('\n'.join('\t'+setup for setup in skipped))
